materialize_registries:
  default_args:
    owner: 'v.folin@reply.it'
    start_date: 2023-01-03
    retries: 0
  schedule_interval: None
  dagrun_timeout_sec: 3600
  description: "To materialize historicized tables"
  tasks:
    trigger_registry_dim_customer:
      operator: airflow.operators.trigger_dagrun.TriggerDagRunOperator
      trigger_dag_id: 'registry_dim_customer'
      wait_for_completion: True
      deferrable: True
      failed_states: [ 'failed' ]
    trigger_registry_dim_supplier:
      operator: airflow.operators.trigger_dagrun.TriggerDagRunOperator
      trigger_dag_id: 'registry_dim_supplier'
      wait_for_completion: True
      deferrable: True
      failed_states: [ 'failed' ]
      dependencies: [ trigger_registry_dim_customer ]
    trigger_registry_fct_inventory:
      operator: airflow.operators.trigger_dagrun.TriggerDagRunOperator
      trigger_dag_id: 'registry_fct_inventory'
      wait_for_completion: True
      deferrable: True
      failed_states: [ 'failed' ]
      dependencies: [ trigger_registry_dim_supplier ]
    trigger_registry_fct_orders:
      operator: airflow.operators.trigger_dagrun.TriggerDagRunOperator
      trigger_dag_id: 'registry_fct_orders'
      wait_for_completion: True
      deferrable: True
      failed_states: [ 'failed' ]
      dependencies: [ trigger_registry_dim_customer ]
    trigger_registry_fct_sales:
      operator: airflow.operators.trigger_dagrun.TriggerDagRunOperator
      trigger_dag_id: 'registry_fct_sales'
      wait_for_completion: True
      deferrable: True
      failed_states: [ 'failed' ]
      dependencies: [ trigger_registry_fct_orders ]
registry_volume_orders:
  default_args:
    owner: 'v.folin@reply.it'
    start_date: 2023-12-20
    retries: 1
    retry_delay_sec: 60
  schedule_interval: None
  dagrun_timeout_sec: 3600
  description: 'To materialize historicized volume_orders dashboard'
  params:
      groupBy: []
      filters: []
      partitionByDate: CURRENT_DATE()
  render_template_as_native_obj: True
  tasks:
    dbt_run_volume_orders:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'registry_volume_orders'
      vars: {'groupBy': "{{ params.groupBy }}", 'filters': "{{ params.filters }}", 'partitionByDate': "{{ params.partitionByDate }}" }
registry_volume_sales:
  default_args:
    owner: 'v.folin@reply.it'
    start_date: 2024-01-03
    retries: 1
    retry_delay_sec: 60
  schedule_interval: None
  dagrun_timeout_sec: 3600
  description: 'To materialize historicized volume_sales dashboard'
  params:
      groupBy: []
      filters: []
      partitionByDate: CURRENT_DATE()
  render_template_as_native_obj: True
  tasks:
    dbt_run_volume_sales:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'registry_volume_sales'
      vars: { 'groupBy': "{{ params.groupBy }}", 'filters': "{{ params.filters }}", 'partitionByDate': "{{ params.partitionByDate }}" }
registry_sales_time:
  default_args:
    owner: 'v.folin@reply.it'
    start_date: 2024-01-03
    retries: 1
    retry_delay_sec: 60
  schedule_interval: None
  dagrun_timeout_sec: 3600
  description: 'To materialize historicized sales_time dashboard'
  params:
      groupBy: []
      filters: []
      partitionByDate: CURRENT_DATE()
  render_template_as_native_obj: True
  tasks:
    dbt_run_sales_time:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'registry_sales_time'
      vars: { 'groupBy': "{{ params.groupBy }}", 'filters': "{{ params.filters }}", 'partitionByDate': "{{ params.partitionByDate }}" }
