create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.REGISTRY_STG_ORDERS (
	ORDERKEY NUMBER(38,0),
	CUSTKEY NUMBER(38,0),
	ORDERSTATUS VARCHAR(1),
	TOTALPRICE NUMBER(12,2),
	ORDERDATE DATE,
	ORDERPRIORITY VARCHAR(15),
	CLERK VARCHAR(15),
	SHIPPRIORITY NUMBER(38,0),
	PARTITION_DATE DATE
);

create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.REGISTRY_STG_CUSTOMER (
	CUSTKEY NUMBER(38,0),
	CUST_NAME VARCHAR(25),
	NATIONKEY NUMBER(38,0),
	CUST_ACCTBAL NUMBER(12,2),
	CUST_MKTSEGMENT VARCHAR(10),
	PARTITION_DATE DATE
);

create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.REGISTRY_STG_LINEITEM (
    LINEITEMKEY VARCHAR(32),
    ORDERKEY NUMBER(38,0),
	LINENUMBER NUMBER(38,0),
	PARTKEY NUMBER(38,0),
	SUPPKEY NUMBER(38,0),
	PARTSUPPKEY VARCHAR(32),
	QUANTITY NUMBER(38,0),
	EXTENDEDPRICE NUMBER(12,2),
	DISCOUNT NUMBER(12,2),
	TAX NUMBER(12,2),
	RETURNFLAG VARCHAR(1),
	LINESTATUS VARCHAR(1),
	SHIPDATE DATE,
	COMMITDATE DATE,
	RECEIPTDATE DATE,
	SHIPINSTRUCT VARCHAR(10),
	SHIPMODE VARCHAR(10),
    PARTITION_DATE DATE
);

create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.REGISTRY_STG_PART(
    PARTKEY NUMBER(38,0),
	NAME VARCHAR(55),
	MANUFACTURER VARCHAR(25),
	BRAND VARCHAR(10),
	TYPE VARCHAR(25),
	PRODUCTSIZE NUMBER(38,0),
	CONTAINER VARCHAR(10),
	RETAILPRICE NUMBER(12,2),
    PARTITION_DATE DATE
);

create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.REGISTRY_STG_PARTSUPP(
    PARTSUPPKEY VARCHAR(32),
    PARTKEY NUMBER(38,0),
	SUPPKEY NUMBER(38,0),
	AVAILQTY NUMBER(38,0),
	SUPPLYCOST NUMBER(12,2),
    PARTITION_DATE DATE
);

create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.REGISTRY_STG_SUPPLIER(
    SUPPKEY NUMBER(38,0),
	SUPP_NAME VARCHAR(25),
	NATIONKEY NUMBER(38,0),
	SUPP_ACCTBAL NUMBER(12,2),
    PARTITION_DATE DATE
);

create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.METADATA_TEST(
    TABLE_CATALOG VARCHAR(16777216),
	TABLE_SCHEMA VARCHAR(16777216),
	TABLE_NAME VARCHAR(16777216),
	TABLE_REF VARCHAR(16777216),
    ROW_COUNT NUMBER(38,0),
	ROW_COUNT_DELTA NUMBER(38,0),
    PARTITION_DATE DATE
);

create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.STG_ELEMENTARY_TEST_RESULTS (
	TEST_UNIQUE_ID VARCHAR(16777216),
    MODEL_UNIQUE_ID VARCHAR(16777216),
    DATABASE_NAME VARCHAR(16777216),
	SCHEMA_NAME VARCHAR(16777216),
	TABLE_NAME VARCHAR(16777216),
	COLUMN_NAME VARCHAR(16777216),
	TABLE_REF VARCHAR(16777216),
	COLUMN_REF VARCHAR(16777216),
    TEST_RESULTS_QUERY VARCHAR(16777216),
	STATUS VARCHAR(16777216),
	FAILURES NUMBER(38,0),
	RESULT_ROWS VARCHAR(16777216),
    DETECTED_AT TIMESTAMP_NTZ(9),
	DETECTED_AT_DATE DATE,
    FAILED_ROW_COUNT NUMBER(38,0),
    FAILED_ROW_COUNT_DELTA NUMBER(38,0),
    PARTITION_DATE DATE
);

create or replace TRANSIENT TABLE ANALYTICS.ANALYTICS_ENGINEERING_DATA_PIPELINE.FCT_TEST_RESULTS (
	TEST_UNIQUE_ID VARCHAR(16777216),
	TEST_SHORT_NAME VARCHAR(16777216),
	MODEL_UNIQUE_ID VARCHAR(16777216),
	DATABASE_NAME VARCHAR(16777216),
	SCHEMA_NAME VARCHAR(16777216),
	TABLE_NAME VARCHAR(16777216),
	COLUMN_NAME VARCHAR(16777216),
	TABLE_REF VARCHAR(16777216),
	COLUMN_REF VARCHAR(16777216),
	TEST_OWNERS VARCHAR(16777216),
	TEST_TAG VARCHAR(16777216),
	MODEL_OWNERS VARCHAR(16777216),
	MODEL_TAG VARCHAR(16777216),
	DESCRIPTION VARCHAR(16777216),
	ORIGINAL_PATH VARCHAR(16777216),
	DETECTED_AT TIMESTAMP_NTZ(9),
	DETECTED_AT_DATE DATE,
	TEST_RESULTS_QUERY VARCHAR(16777216),
	STATUS VARCHAR(16777216),
	FAILURES NUMBER(38,0),
	RESULT_ROWS VARCHAR(16777216),
	ROW_COUNT NUMBER(38,0),
	ROW_COUNT_DELTA NUMBER(38,0),
	FAILED_ROW_COUNT NUMBER(38,0),
	FAILED_ROW_COUNT_DELTA NUMBER(38,0),
    PARTITION_DATE DATE
);