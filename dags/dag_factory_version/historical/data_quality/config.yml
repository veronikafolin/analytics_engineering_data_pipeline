dataquality:
  default_args:
    owner: 'v.folin@reply.it'
    start_date: 2023-01-07
    retries: 0
    snowflake_conn_id: snowflake
  schedule_interval: None
  dagrun_timeout_sec: 3600
  description: "To materialize tables to monitor data quality tests"
  params:
    groupBy: [ ]
    filters: [ ]
  render_template_as_native_obj: True
  tasks:
    dbt_test:
      operator: airflow_dbt.operators.dbt_operator.DbtTestOperator
    dbt_seed_test_tags:
      operator: airflow_dbt.operators.dbt_operator.DbtSeedOperator
      select: 'test_tags'
    dbt_seed_model_tags:
      operator: airflow_dbt.operators.dbt_operator.DbtSeedOperator
      select: 'model_tags'
    check_metadata_initialization:
      operator: airflow.providers.snowflake.operators.snowflake.SnowflakeCheckOperator
      sql: |
        SELECT ROW_COUNT
        FROM ANALYTICS.INFORMATION_SCHEMA.TABLES
        WHERE  table_schema = 'ANALYTICS_ENGINEERING_DATA_PIPELINE'
        AND    table_name   = 'METADATA_TEST'
    branch_on_metadata_initialization:
      operator: airflow.operators.python.BranchPythonOperator
      python_callable_file: /home/airflow/gcs/dags/dag_factory_version/historical/data_quality/utils.py
      python_callable_name: branch_func_on_metadata_initialization
      provide_context: True
      trigger_rule: 'all_done'
      dependencies: [ check_metadata_initialization ]
    dbt_run_metadata:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'metadata_test'
      dependencies: [ branch_on_metadata_initialization ]
    dbt_run_metadata_full_refresh:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'metadata_test'
      full_refresh: True
      dependencies: [ branch_on_metadata_initialization ]
    dbt_run_stg_dbt_tests:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'stg_dbt_tests'
      trigger_rule: 'all_done'
      dependencies: [ dbt_test ]
    check_stg_elementary_test_results_initialization:
      operator: airflow.providers.snowflake.operators.snowflake.SnowflakeCheckOperator
      sql: |
        SELECT ROW_COUNT
        FROM ANALYTICS.INFORMATION_SCHEMA.TABLES
        WHERE  table_schema = 'ANALYTICS_ENGINEERING_DATA_PIPELINE'
        AND    table_name   = 'STG_ELEMENTARY_TEST_RESULTS'
      trigger_rule: 'all_done'
      dependencies: [ dbt_test ]
    branch_on_stg_elementary_test_results_initialization:
      operator: airflow.operators.python.BranchPythonOperator
      python_callable_file: /home/airflow/gcs/dags/dag_factory_version/historical/data_quality/utils.py
      python_callable_name: branch_func_on_stg_elementary_test_results_initialization
      provide_context: True
      trigger_rule: 'all_done'
      dependencies: [ check_stg_elementary_test_results_initialization ]
    dbt_run_stg_elementary_test_results:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'stg_elementary_test_results'
      dependencies: [ branch_on_stg_elementary_test_results_initialization]
    dbt_run_stg_elementary_test_results_full_refresh:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'stg_elementary_test_results'
      full_refresh: True
      dependencies: [ branch_on_stg_elementary_test_results_initialization ]
    check_fct_test_results_initialization:
      operator: airflow.providers.snowflake.operators.snowflake.SnowflakeCheckOperator
      sql: |
        SELECT ROW_COUNT
        FROM ANALYTICS.INFORMATION_SCHEMA.TABLES
        WHERE  table_schema = 'ANALYTICS_ENGINEERING_DATA_PIPELINE'
        AND    table_name   = 'FCT_TEST_RESULTS'
      trigger_rule: 'all_done'
      dependencies: [ dbt_seed_test_tags, dbt_seed_model_tags, dbt_run_stg_dbt_tests, dbt_run_stg_elementary_test_results_full_refresh, dbt_run_metadata_full_refresh, dbt_run_stg_elementary_test_results, dbt_run_metadata ]
    branch_on_fct_test_results_initialization:
      operator: airflow.operators.python.BranchPythonOperator
      python_callable_file: /home/airflow/gcs/dags/dag_factory_version/historical/data_quality/utils.py
      python_callable_name: branch_func_on_fct_test_results_initialization
      provide_context: True
      trigger_rule: 'all_done'
      dependencies: [ check_fct_test_results_initialization ]
    dbt_run_fct_test_results:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'fct_test_results'
      dependencies: [ branch_on_fct_test_results_initialization ]
    dbt_run_fct_test_results_full_refresh:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'fct_test_results'
      full_refresh: True
      dependencies: [ branch_on_fct_test_results_initialization ]
    dbt_run_monitor_dataquality:
      operator: airflow_dbt.operators.dbt_operator.DbtRunOperator
      models: 'monitor_dataquality'
      vars: { 'groupBy': "{{ params.groupBy }}", 'filters': "{{ params.filters }}" }
      trigger_rule: 'none_failed'
      dependencies: [dbt_run_fct_test_results, dbt_run_fct_test_results_full_refresh]